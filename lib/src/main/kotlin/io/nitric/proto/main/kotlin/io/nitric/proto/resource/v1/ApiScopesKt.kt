//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/resource/v1/resource.proto

package io.nitric.proto.resource.v1;

@kotlin.jvm.JvmName("-initializeapiScopes")
inline fun apiScopes(block: io.nitric.proto.resource.v1.ApiScopesKt.Dsl.() -> kotlin.Unit): io.nitric.proto.resource.v1.ApiScopes =
  io.nitric.proto.resource.v1.ApiScopesKt.Dsl._create(io.nitric.proto.resource.v1.ApiScopes.newBuilder()).apply { block() }._build()
object ApiScopesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.resource.v1.ApiScopes.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.resource.v1.ApiScopes.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.resource.v1.ApiScopes = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class ScopesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string scopes = 1;</code>
     * @return A list containing the scopes.
     */
     val scopes: com.google.protobuf.kotlin.DslList<kotlin.String, ScopesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getScopesList()
      )
    /**
     * <code>repeated string scopes = 1;</code>
     * @param value The scopes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addScopes")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, ScopesProxy>.add(value: kotlin.String) {
      _builder.addScopes(value)
    }
    /**
     * <code>repeated string scopes = 1;</code>
     * @param value The scopes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignScopes")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ScopesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string scopes = 1;</code>
     * @param values The scopes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllScopes")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, ScopesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllScopes(values)
    }
    /**
     * <code>repeated string scopes = 1;</code>
     * @param values The scopes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllScopes")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ScopesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string scopes = 1;</code>
     * @param index The index to set the value at.
     * @param value The scopes to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setScopes")
    operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ScopesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setScopes(index, value)
    }/**
     * <code>repeated string scopes = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearScopes")
    fun com.google.protobuf.kotlin.DslList<kotlin.String, ScopesProxy>.clear() {
      _builder.clearScopes()
    }}
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.resource.v1.ApiScopes.copy(block: io.nitric.proto.resource.v1.ApiScopesKt.Dsl.() -> kotlin.Unit): io.nitric.proto.resource.v1.ApiScopes =
  io.nitric.proto.resource.v1.ApiScopesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

