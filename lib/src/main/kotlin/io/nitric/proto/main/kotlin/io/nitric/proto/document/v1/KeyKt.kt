//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/document/v1/document.proto

package io.nitric.proto.document.v1;

@kotlin.jvm.JvmName("-initializekey")
inline fun key(block: io.nitric.proto.document.v1.KeyKt.Dsl.() -> kotlin.Unit): io.nitric.proto.document.v1.Key =
  io.nitric.proto.document.v1.KeyKt.Dsl._create(io.nitric.proto.document.v1.Key.newBuilder()).apply { block() }._build()
object KeyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.document.v1.Key.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.document.v1.Key.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.document.v1.Key = _builder.build()

    /**
     * <pre>
     * The item collection
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1 [(.validate.rules) = { ... }</code>
     */
    var collection: io.nitric.proto.document.v1.Collection
      @JvmName("getCollection")
      get() = _builder.getCollection()
      @JvmName("setCollection")
      set(value) {
        _builder.setCollection(value)
      }
    /**
     * <pre>
     * The item collection
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1 [(.validate.rules) = { ... }</code>
     */
    fun clearCollection() {
      _builder.clearCollection()
    }
    /**
     * <pre>
     * The item collection
     * </pre>
     *
     * <code>.nitric.document.v1.Collection collection = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the collection field is set.
     */
    fun hasCollection(): kotlin.Boolean {
      return _builder.hasCollection()
    }

    /**
     * <pre>
     * The items unique id
     * </pre>
     *
     * <code>string id = 2 [(.validate.rules) = { ... }</code>
     */
    var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <pre>
     * The items unique id
     * </pre>
     *
     * <code>string id = 2 [(.validate.rules) = { ... }</code>
     */
    fun clearId() {
      _builder.clearId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.document.v1.Key.copy(block: io.nitric.proto.document.v1.KeyKt.Dsl.() -> kotlin.Unit): io.nitric.proto.document.v1.Key =
  io.nitric.proto.document.v1.KeyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.nitric.proto.document.v1.KeyOrBuilder.collectionOrNull: io.nitric.proto.document.v1.Collection?
  get() = if (hasCollection()) getCollection() else null

