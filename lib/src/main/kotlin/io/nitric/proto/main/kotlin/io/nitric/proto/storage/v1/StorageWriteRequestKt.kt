//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/storage/v1/storage.proto

package io.nitric.proto.storage.v1;

@kotlin.jvm.JvmName("-initializestorageWriteRequest")
inline fun storageWriteRequest(block: io.nitric.proto.storage.v1.StorageWriteRequestKt.Dsl.() -> kotlin.Unit): io.nitric.proto.storage.v1.StorageWriteRequest =
  io.nitric.proto.storage.v1.StorageWriteRequestKt.Dsl._create(io.nitric.proto.storage.v1.StorageWriteRequest.newBuilder()).apply { block() }._build()
object StorageWriteRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.storage.v1.StorageWriteRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.storage.v1.StorageWriteRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.storage.v1.StorageWriteRequest = _builder.build()

    /**
     * <pre>
     * Nitric name of the bucket to store in
     *  this will be automatically resolved to the provider specific bucket identifier.
     * </pre>
     *
     * <code>string bucket_name = 1;</code>
     */
    var bucketName: kotlin.String
      @JvmName("getBucketName")
      get() = _builder.getBucketName()
      @JvmName("setBucketName")
      set(value) {
        _builder.setBucketName(value)
      }
    /**
     * <pre>
     * Nitric name of the bucket to store in
     *  this will be automatically resolved to the provider specific bucket identifier.
     * </pre>
     *
     * <code>string bucket_name = 1;</code>
     */
    fun clearBucketName() {
      _builder.clearBucketName()
    }

    /**
     * <pre>
     * Key to store the item under
     * </pre>
     *
     * <code>string key = 2 [(.validate.rules) = { ... }</code>
     */
    var key: kotlin.String
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * <pre>
     * Key to store the item under
     * </pre>
     *
     * <code>string key = 2 [(.validate.rules) = { ... }</code>
     */
    fun clearKey() {
      _builder.clearKey()
    }

    /**
     * <pre>
     * bytes array to store
     * </pre>
     *
     * <code>bytes body = 3;</code>
     */
    var body: com.google.protobuf.ByteString
      @JvmName("getBody")
      get() = _builder.getBody()
      @JvmName("setBody")
      set(value) {
        _builder.setBody(value)
      }
    /**
     * <pre>
     * bytes array to store
     * </pre>
     *
     * <code>bytes body = 3;</code>
     */
    fun clearBody() {
      _builder.clearBody()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.storage.v1.StorageWriteRequest.copy(block: io.nitric.proto.storage.v1.StorageWriteRequestKt.Dsl.() -> kotlin.Unit): io.nitric.proto.storage.v1.StorageWriteRequest =
  io.nitric.proto.storage.v1.StorageWriteRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

