//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/document/v1/document.proto

package io.nitric.proto.document.v1;

@kotlin.jvm.JvmName("-initializedocumentQueryResponse")
inline fun documentQueryResponse(block: io.nitric.proto.document.v1.DocumentQueryResponseKt.Dsl.() -> kotlin.Unit): io.nitric.proto.document.v1.DocumentQueryResponse =
  io.nitric.proto.document.v1.DocumentQueryResponseKt.Dsl._create(io.nitric.proto.document.v1.DocumentQueryResponse.newBuilder()).apply { block() }._build()
object DocumentQueryResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.document.v1.DocumentQueryResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.document.v1.DocumentQueryResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.document.v1.DocumentQueryResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class DocumentsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * The retrieved values
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Document documents = 1;</code>
     */
     val documents: com.google.protobuf.kotlin.DslList<io.nitric.proto.document.v1.Document, DocumentsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDocumentsList()
      )
    /**
     * <pre>
     * The retrieved values
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Document documents = 1;</code>
     * @param value The documents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDocuments")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.document.v1.Document, DocumentsProxy>.add(value: io.nitric.proto.document.v1.Document) {
      _builder.addDocuments(value)
    }
    /**
     * <pre>
     * The retrieved values
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Document documents = 1;</code>
     * @param value The documents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDocuments")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.document.v1.Document, DocumentsProxy>.plusAssign(value: io.nitric.proto.document.v1.Document) {
      add(value)
    }
    /**
     * <pre>
     * The retrieved values
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Document documents = 1;</code>
     * @param values The documents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDocuments")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.document.v1.Document, DocumentsProxy>.addAll(values: kotlin.collections.Iterable<io.nitric.proto.document.v1.Document>) {
      _builder.addAllDocuments(values)
    }
    /**
     * <pre>
     * The retrieved values
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Document documents = 1;</code>
     * @param values The documents to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDocuments")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.document.v1.Document, DocumentsProxy>.plusAssign(values: kotlin.collections.Iterable<io.nitric.proto.document.v1.Document>) {
      addAll(values)
    }
    /**
     * <pre>
     * The retrieved values
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Document documents = 1;</code>
     * @param index The index to set the value at.
     * @param value The documents to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDocuments")
    operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.document.v1.Document, DocumentsProxy>.set(index: kotlin.Int, value: io.nitric.proto.document.v1.Document) {
      _builder.setDocuments(index, value)
    }
    /**
     * <pre>
     * The retrieved values
     * </pre>
     *
     * <code>repeated .nitric.document.v1.Document documents = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDocuments")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.document.v1.Document, DocumentsProxy>.clear() {
      _builder.clearDocuments()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class PagingTokenProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * The query paging continuation token, when empty no further results are available
     * </pre>
     *
     * <code>map&lt;string, string&gt; paging_token = 2;</code>
     */
     val pagingToken: com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PagingTokenProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getPagingTokenMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getPagingTokenMap()
      )
    /**
     * <pre>
     * The query paging continuation token, when empty no further results are available
     * </pre>
     *
     * <code>map&lt;string, string&gt; paging_token = 2;</code>
     */
    @JvmName("putPagingToken")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PagingTokenProxy>
      .put(key: kotlin.String, value: kotlin.String) {
         _builder.putPagingToken(key, value)
       }
    /**
     * <pre>
     * The query paging continuation token, when empty no further results are available
     * </pre>
     *
     * <code>map&lt;string, string&gt; paging_token = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setPagingToken")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PagingTokenProxy>
      .set(key: kotlin.String, value: kotlin.String) {
         put(key, value)
       }
    /**
     * <pre>
     * The query paging continuation token, when empty no further results are available
     * </pre>
     *
     * <code>map&lt;string, string&gt; paging_token = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removePagingToken")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PagingTokenProxy>
      .remove(key: kotlin.String) {
         _builder.removePagingToken(key)
       }
    /**
     * <pre>
     * The query paging continuation token, when empty no further results are available
     * </pre>
     *
     * <code>map&lt;string, string&gt; paging_token = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllPagingToken")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PagingTokenProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, kotlin.String>) {
         _builder.putAllPagingToken(map)
       }
    /**
     * <pre>
     * The query paging continuation token, when empty no further results are available
     * </pre>
     *
     * <code>map&lt;string, string&gt; paging_token = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearPagingToken")
    fun com.google.protobuf.kotlin.DslMap<kotlin.String, kotlin.String, PagingTokenProxy>
      .clear() {
         _builder.clearPagingToken()
       }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.document.v1.DocumentQueryResponse.copy(block: io.nitric.proto.document.v1.DocumentQueryResponseKt.Dsl.() -> kotlin.Unit): io.nitric.proto.document.v1.DocumentQueryResponse =
  io.nitric.proto.document.v1.DocumentQueryResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

