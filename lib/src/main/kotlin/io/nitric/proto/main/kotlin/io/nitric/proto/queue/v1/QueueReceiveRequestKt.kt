//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/queue/v1/queue.proto

package io.nitric.proto.queue.v1;

@kotlin.jvm.JvmName("-initializequeueReceiveRequest")
inline fun queueReceiveRequest(block: io.nitric.proto.queue.v1.QueueReceiveRequestKt.Dsl.() -> kotlin.Unit): io.nitric.proto.queue.v1.QueueReceiveRequest =
  io.nitric.proto.queue.v1.QueueReceiveRequestKt.Dsl._create(io.nitric.proto.queue.v1.QueueReceiveRequest.newBuilder()).apply { block() }._build()
object QueueReceiveRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.queue.v1.QueueReceiveRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.queue.v1.QueueReceiveRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.queue.v1.QueueReceiveRequest = _builder.build()

    /**
     * <pre>
     * The nitric name for the queue
     * this will automatically be resolved to the provider specific queue identifier.
     * </pre>
     *
     * <code>string queue = 1 [(.validate.rules) = { ... }</code>
     */
    var queue: kotlin.String
      @JvmName("getQueue")
      get() = _builder.getQueue()
      @JvmName("setQueue")
      set(value) {
        _builder.setQueue(value)
      }
    /**
     * <pre>
     * The nitric name for the queue
     * this will automatically be resolved to the provider specific queue identifier.
     * </pre>
     *
     * <code>string queue = 1 [(.validate.rules) = { ... }</code>
     */
    fun clearQueue() {
      _builder.clearQueue()
    }

    /**
     * <pre>
     * The max number of items to pop off the queue, may be capped by provider specific limitations
     * </pre>
     *
     * <code>int32 depth = 2;</code>
     */
    var depth: kotlin.Int
      @JvmName("getDepth")
      get() = _builder.getDepth()
      @JvmName("setDepth")
      set(value) {
        _builder.setDepth(value)
      }
    /**
     * <pre>
     * The max number of items to pop off the queue, may be capped by provider specific limitations
     * </pre>
     *
     * <code>int32 depth = 2;</code>
     */
    fun clearDepth() {
      _builder.clearDepth()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.queue.v1.QueueReceiveRequest.copy(block: io.nitric.proto.queue.v1.QueueReceiveRequestKt.Dsl.() -> kotlin.Unit): io.nitric.proto.queue.v1.QueueReceiveRequest =
  io.nitric.proto.queue.v1.QueueReceiveRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

