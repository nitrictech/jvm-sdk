//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/resource/v1/resource.proto

package io.nitric.proto.resource.v1;

@kotlin.jvm.JvmName("-initializeresourceDeclareRequest")
inline fun resourceDeclareRequest(block: io.nitric.proto.resource.v1.ResourceDeclareRequestKt.Dsl.() -> kotlin.Unit): io.nitric.proto.resource.v1.ResourceDeclareRequest =
  io.nitric.proto.resource.v1.ResourceDeclareRequestKt.Dsl._create(io.nitric.proto.resource.v1.ResourceDeclareRequest.newBuilder()).apply { block() }._build()
object ResourceDeclareRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.resource.v1.ResourceDeclareRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.resource.v1.ResourceDeclareRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.resource.v1.ResourceDeclareRequest = _builder.build()

    /**
     * <code>.nitric.resource.v1.Resource resource = 1;</code>
     */
    var resource: io.nitric.proto.resource.v1.Resource
      @JvmName("getResource")
      get() = _builder.getResource()
      @JvmName("setResource")
      set(value) {
        _builder.setResource(value)
      }
    /**
     * <code>.nitric.resource.v1.Resource resource = 1;</code>
     */
    fun clearResource() {
      _builder.clearResource()
    }
    /**
     * <code>.nitric.resource.v1.Resource resource = 1;</code>
     * @return Whether the resource field is set.
     */
    fun hasResource(): kotlin.Boolean {
      return _builder.hasResource()
    }

    /**
     * <code>.nitric.resource.v1.PolicyResource policy = 10;</code>
     */
    var policy: io.nitric.proto.resource.v1.PolicyResource
      @JvmName("getPolicy")
      get() = _builder.getPolicy()
      @JvmName("setPolicy")
      set(value) {
        _builder.setPolicy(value)
      }
    /**
     * <code>.nitric.resource.v1.PolicyResource policy = 10;</code>
     */
    fun clearPolicy() {
      _builder.clearPolicy()
    }
    /**
     * <code>.nitric.resource.v1.PolicyResource policy = 10;</code>
     * @return Whether the policy field is set.
     */
    fun hasPolicy(): kotlin.Boolean {
      return _builder.hasPolicy()
    }

    /**
     * <code>.nitric.resource.v1.BucketResource bucket = 11;</code>
     */
    var bucket: io.nitric.proto.resource.v1.BucketResource
      @JvmName("getBucket")
      get() = _builder.getBucket()
      @JvmName("setBucket")
      set(value) {
        _builder.setBucket(value)
      }
    /**
     * <code>.nitric.resource.v1.BucketResource bucket = 11;</code>
     */
    fun clearBucket() {
      _builder.clearBucket()
    }
    /**
     * <code>.nitric.resource.v1.BucketResource bucket = 11;</code>
     * @return Whether the bucket field is set.
     */
    fun hasBucket(): kotlin.Boolean {
      return _builder.hasBucket()
    }

    /**
     * <code>.nitric.resource.v1.QueueResource queue = 12;</code>
     */
    var queue: io.nitric.proto.resource.v1.QueueResource
      @JvmName("getQueue")
      get() = _builder.getQueue()
      @JvmName("setQueue")
      set(value) {
        _builder.setQueue(value)
      }
    /**
     * <code>.nitric.resource.v1.QueueResource queue = 12;</code>
     */
    fun clearQueue() {
      _builder.clearQueue()
    }
    /**
     * <code>.nitric.resource.v1.QueueResource queue = 12;</code>
     * @return Whether the queue field is set.
     */
    fun hasQueue(): kotlin.Boolean {
      return _builder.hasQueue()
    }

    /**
     * <code>.nitric.resource.v1.TopicResource topic = 13;</code>
     */
    var topic: io.nitric.proto.resource.v1.TopicResource
      @JvmName("getTopic")
      get() = _builder.getTopic()
      @JvmName("setTopic")
      set(value) {
        _builder.setTopic(value)
      }
    /**
     * <code>.nitric.resource.v1.TopicResource topic = 13;</code>
     */
    fun clearTopic() {
      _builder.clearTopic()
    }
    /**
     * <code>.nitric.resource.v1.TopicResource topic = 13;</code>
     * @return Whether the topic field is set.
     */
    fun hasTopic(): kotlin.Boolean {
      return _builder.hasTopic()
    }

    /**
     * <code>.nitric.resource.v1.CollectionResource collection = 14;</code>
     */
    var collection: io.nitric.proto.resource.v1.CollectionResource
      @JvmName("getCollection")
      get() = _builder.getCollection()
      @JvmName("setCollection")
      set(value) {
        _builder.setCollection(value)
      }
    /**
     * <code>.nitric.resource.v1.CollectionResource collection = 14;</code>
     */
    fun clearCollection() {
      _builder.clearCollection()
    }
    /**
     * <code>.nitric.resource.v1.CollectionResource collection = 14;</code>
     * @return Whether the collection field is set.
     */
    fun hasCollection(): kotlin.Boolean {
      return _builder.hasCollection()
    }

    /**
     * <code>.nitric.resource.v1.SecretResource secret = 15;</code>
     */
    var secret: io.nitric.proto.resource.v1.SecretResource
      @JvmName("getSecret")
      get() = _builder.getSecret()
      @JvmName("setSecret")
      set(value) {
        _builder.setSecret(value)
      }
    /**
     * <code>.nitric.resource.v1.SecretResource secret = 15;</code>
     */
    fun clearSecret() {
      _builder.clearSecret()
    }
    /**
     * <code>.nitric.resource.v1.SecretResource secret = 15;</code>
     * @return Whether the secret field is set.
     */
    fun hasSecret(): kotlin.Boolean {
      return _builder.hasSecret()
    }

    /**
     * <code>.nitric.resource.v1.ApiResource api = 16;</code>
     */
    var api: io.nitric.proto.resource.v1.ApiResource
      @JvmName("getApi")
      get() = _builder.getApi()
      @JvmName("setApi")
      set(value) {
        _builder.setApi(value)
      }
    /**
     * <code>.nitric.resource.v1.ApiResource api = 16;</code>
     */
    fun clearApi() {
      _builder.clearApi()
    }
    /**
     * <code>.nitric.resource.v1.ApiResource api = 16;</code>
     * @return Whether the api field is set.
     */
    fun hasApi(): kotlin.Boolean {
      return _builder.hasApi()
    }
    val configCase: io.nitric.proto.resource.v1.ResourceDeclareRequest.ConfigCase
      @JvmName("getConfigCase")
      get() = _builder.getConfigCase()

    fun clearConfig() {
      _builder.clearConfig()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.resource.v1.ResourceDeclareRequest.copy(block: io.nitric.proto.resource.v1.ResourceDeclareRequestKt.Dsl.() -> kotlin.Unit): io.nitric.proto.resource.v1.ResourceDeclareRequest =
  io.nitric.proto.resource.v1.ResourceDeclareRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.nitric.proto.resource.v1.ResourceDeclareRequestOrBuilder.resourceOrNull: io.nitric.proto.resource.v1.Resource?
  get() = if (hasResource()) getResource() else null

val io.nitric.proto.resource.v1.ResourceDeclareRequestOrBuilder.policyOrNull: io.nitric.proto.resource.v1.PolicyResource?
  get() = if (hasPolicy()) getPolicy() else null

val io.nitric.proto.resource.v1.ResourceDeclareRequestOrBuilder.bucketOrNull: io.nitric.proto.resource.v1.BucketResource?
  get() = if (hasBucket()) getBucket() else null

val io.nitric.proto.resource.v1.ResourceDeclareRequestOrBuilder.queueOrNull: io.nitric.proto.resource.v1.QueueResource?
  get() = if (hasQueue()) getQueue() else null

val io.nitric.proto.resource.v1.ResourceDeclareRequestOrBuilder.topicOrNull: io.nitric.proto.resource.v1.TopicResource?
  get() = if (hasTopic()) getTopic() else null

val io.nitric.proto.resource.v1.ResourceDeclareRequestOrBuilder.collectionOrNull: io.nitric.proto.resource.v1.CollectionResource?
  get() = if (hasCollection()) getCollection() else null

val io.nitric.proto.resource.v1.ResourceDeclareRequestOrBuilder.secretOrNull: io.nitric.proto.resource.v1.SecretResource?
  get() = if (hasSecret()) getSecret() else null

val io.nitric.proto.resource.v1.ResourceDeclareRequestOrBuilder.apiOrNull: io.nitric.proto.resource.v1.ApiResource?
  get() = if (hasApi()) getApi() else null

