// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/deploy/v1/deploy.proto

package io.nitric.proto.deploy.v1;

/**
 * <pre>
 * A unit of execution (i.e. function/container)
 * </pre>
 *
 * Protobuf type {@code nitric.deploy.v1.ExecutionUnit}
 */
public final class ExecutionUnit extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nitric.deploy.v1.ExecutionUnit)
    ExecutionUnitOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExecutionUnit.newBuilder() to construct.
  private ExecutionUnit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExecutionUnit() {
    type_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExecutionUnit();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.nitric.proto.deploy.v1.Deploys.internal_static_nitric_deploy_v1_ExecutionUnit_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 14:
        return internalGetEnv();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.nitric.proto.deploy.v1.Deploys.internal_static_nitric_deploy_v1_ExecutionUnit_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.nitric.proto.deploy.v1.ExecutionUnit.class, io.nitric.proto.deploy.v1.ExecutionUnit.Builder.class);
  }

  private int sourceCase_ = 0;
  private java.lang.Object source_;
  public enum SourceCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    IMAGE(1),
    SOURCE_NOT_SET(0);
    private final int value;
    private SourceCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SourceCase valueOf(int value) {
      return forNumber(value);
    }

    public static SourceCase forNumber(int value) {
      switch (value) {
        case 1: return IMAGE;
        case 0: return SOURCE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SourceCase
  getSourceCase() {
    return SourceCase.forNumber(
        sourceCase_);
  }

  public static final int IMAGE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Container image as a execution unit
   * </pre>
   *
   * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
   * @return Whether the image field is set.
   */
  @java.lang.Override
  public boolean hasImage() {
    return sourceCase_ == 1;
  }
  /**
   * <pre>
   * Container image as a execution unit
   * </pre>
   *
   * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
   * @return The image.
   */
  @java.lang.Override
  public io.nitric.proto.deploy.v1.ImageSource getImage() {
    if (sourceCase_ == 1) {
       return (io.nitric.proto.deploy.v1.ImageSource) source_;
    }
    return io.nitric.proto.deploy.v1.ImageSource.getDefaultInstance();
  }
  /**
   * <pre>
   * Container image as a execution unit
   * </pre>
   *
   * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
   */
  @java.lang.Override
  public io.nitric.proto.deploy.v1.ImageSourceOrBuilder getImageOrBuilder() {
    if (sourceCase_ == 1) {
       return (io.nitric.proto.deploy.v1.ImageSource) source_;
    }
    return io.nitric.proto.deploy.v1.ImageSource.getDefaultInstance();
  }

  public static final int WORKERS_FIELD_NUMBER = 10;
  private int workers_;
  /**
   * <pre>
   * Expected worker count for this execution unit
   * </pre>
   *
   * <code>int32 workers = 10;</code>
   * @return The workers.
   */
  @java.lang.Override
  public int getWorkers() {
    return workers_;
  }

  public static final int TIMEOUT_FIELD_NUMBER = 11;
  private int timeout_;
  /**
   * <pre>
   * Configurable timeout for request handling
   * </pre>
   *
   * <code>int32 timeout = 11 [deprecated = true];</code>
   * @deprecated nitric.deploy.v1.ExecutionUnit.timeout is deprecated.
   *     See proto/deploy/v1/deploy.proto;l=108
   * @return The timeout.
   */
  @java.lang.Override
  @java.lang.Deprecated public int getTimeout() {
    return timeout_;
  }

  public static final int MEMORY_FIELD_NUMBER = 12;
  private int memory_;
  /**
   * <pre>
   * Configurable memory size for this instance
   * </pre>
   *
   * <code>int32 memory = 12 [deprecated = true];</code>
   * @deprecated nitric.deploy.v1.ExecutionUnit.memory is deprecated.
   *     See proto/deploy/v1/deploy.proto;l=110
   * @return The memory.
   */
  @java.lang.Override
  @java.lang.Deprecated public int getMemory() {
    return memory_;
  }

  public static final int TYPE_FIELD_NUMBER = 13;
  private volatile java.lang.Object type_;
  /**
   * <pre>
   * A simple type property
   * describes the requested type of execution unit that this should be
   * for this project, a provider can implement how this request is satisfied
   * in any way
   * </pre>
   *
   * <code>string type = 13;</code>
   * @return The type.
   */
  @java.lang.Override
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A simple type property
   * describes the requested type of execution unit that this should be
   * for this project, a provider can implement how this request is satisfied
   * in any way
   * </pre>
   *
   * <code>string type = 13;</code>
   * @return The bytes for type.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENV_FIELD_NUMBER = 14;
  private static final class EnvDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                io.nitric.proto.deploy.v1.Deploys.internal_static_nitric_deploy_v1_ExecutionUnit_EnvEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> env_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetEnv() {
    if (env_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          EnvDefaultEntryHolder.defaultEntry);
    }
    return env_;
  }

  public int getEnvCount() {
    return internalGetEnv().getMap().size();
  }
  /**
   * <pre>
   * Environment variables for this execution unit
   * </pre>
   *
   * <code>map&lt;string, string&gt; env = 14;</code>
   */

  @java.lang.Override
  public boolean containsEnv(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetEnv().getMap().containsKey(key);
  }
  /**
   * Use {@link #getEnvMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getEnv() {
    return getEnvMap();
  }
  /**
   * <pre>
   * Environment variables for this execution unit
   * </pre>
   *
   * <code>map&lt;string, string&gt; env = 14;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getEnvMap() {
    return internalGetEnv().getMap();
  }
  /**
   * <pre>
   * Environment variables for this execution unit
   * </pre>
   *
   * <code>map&lt;string, string&gt; env = 14;</code>
   */
  @java.lang.Override

  public java.lang.String getEnvOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetEnv().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Environment variables for this execution unit
   * </pre>
   *
   * <code>map&lt;string, string&gt; env = 14;</code>
   */
  @java.lang.Override

  public java.lang.String getEnvOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetEnv().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sourceCase_ == 1) {
      output.writeMessage(1, (io.nitric.proto.deploy.v1.ImageSource) source_);
    }
    if (workers_ != 0) {
      output.writeInt32(10, workers_);
    }
    if (timeout_ != 0) {
      output.writeInt32(11, timeout_);
    }
    if (memory_ != 0) {
      output.writeInt32(12, memory_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, type_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetEnv(),
        EnvDefaultEntryHolder.defaultEntry,
        14);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sourceCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (io.nitric.proto.deploy.v1.ImageSource) source_);
    }
    if (workers_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, workers_);
    }
    if (timeout_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, timeout_);
    }
    if (memory_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, memory_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(type_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, type_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetEnv().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      env__ = EnvDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, env__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.nitric.proto.deploy.v1.ExecutionUnit)) {
      return super.equals(obj);
    }
    io.nitric.proto.deploy.v1.ExecutionUnit other = (io.nitric.proto.deploy.v1.ExecutionUnit) obj;

    if (getWorkers()
        != other.getWorkers()) return false;
    if (getTimeout()
        != other.getTimeout()) return false;
    if (getMemory()
        != other.getMemory()) return false;
    if (!getType()
        .equals(other.getType())) return false;
    if (!internalGetEnv().equals(
        other.internalGetEnv())) return false;
    if (!getSourceCase().equals(other.getSourceCase())) return false;
    switch (sourceCase_) {
      case 1:
        if (!getImage()
            .equals(other.getImage())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + WORKERS_FIELD_NUMBER;
    hash = (53 * hash) + getWorkers();
    hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
    hash = (53 * hash) + getTimeout();
    hash = (37 * hash) + MEMORY_FIELD_NUMBER;
    hash = (53 * hash) + getMemory();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    if (!internalGetEnv().getMap().isEmpty()) {
      hash = (37 * hash) + ENV_FIELD_NUMBER;
      hash = (53 * hash) + internalGetEnv().hashCode();
    }
    switch (sourceCase_) {
      case 1:
        hash = (37 * hash) + IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getImage().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.nitric.proto.deploy.v1.ExecutionUnit parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.nitric.proto.deploy.v1.ExecutionUnit prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A unit of execution (i.e. function/container)
   * </pre>
   *
   * Protobuf type {@code nitric.deploy.v1.ExecutionUnit}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nitric.deploy.v1.ExecutionUnit)
      io.nitric.proto.deploy.v1.ExecutionUnitOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nitric.proto.deploy.v1.Deploys.internal_static_nitric_deploy_v1_ExecutionUnit_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 14:
          return internalGetEnv();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 14:
          return internalGetMutableEnv();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nitric.proto.deploy.v1.Deploys.internal_static_nitric_deploy_v1_ExecutionUnit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nitric.proto.deploy.v1.ExecutionUnit.class, io.nitric.proto.deploy.v1.ExecutionUnit.Builder.class);
    }

    // Construct using io.nitric.proto.deploy.v1.ExecutionUnit.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (imageBuilder_ != null) {
        imageBuilder_.clear();
      }
      workers_ = 0;

      timeout_ = 0;

      memory_ = 0;

      type_ = "";

      internalGetMutableEnv().clear();
      sourceCase_ = 0;
      source_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.nitric.proto.deploy.v1.Deploys.internal_static_nitric_deploy_v1_ExecutionUnit_descriptor;
    }

    @java.lang.Override
    public io.nitric.proto.deploy.v1.ExecutionUnit getDefaultInstanceForType() {
      return io.nitric.proto.deploy.v1.ExecutionUnit.getDefaultInstance();
    }

    @java.lang.Override
    public io.nitric.proto.deploy.v1.ExecutionUnit build() {
      io.nitric.proto.deploy.v1.ExecutionUnit result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.nitric.proto.deploy.v1.ExecutionUnit buildPartial() {
      io.nitric.proto.deploy.v1.ExecutionUnit result = new io.nitric.proto.deploy.v1.ExecutionUnit(this);
      int from_bitField0_ = bitField0_;
      if (sourceCase_ == 1) {
        if (imageBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = imageBuilder_.build();
        }
      }
      result.workers_ = workers_;
      result.timeout_ = timeout_;
      result.memory_ = memory_;
      result.type_ = type_;
      result.env_ = internalGetEnv();
      result.env_.makeImmutable();
      result.sourceCase_ = sourceCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.nitric.proto.deploy.v1.ExecutionUnit) {
        return mergeFrom((io.nitric.proto.deploy.v1.ExecutionUnit)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.nitric.proto.deploy.v1.ExecutionUnit other) {
      if (other == io.nitric.proto.deploy.v1.ExecutionUnit.getDefaultInstance()) return this;
      if (other.getWorkers() != 0) {
        setWorkers(other.getWorkers());
      }
      if (other.getTimeout() != 0) {
        setTimeout(other.getTimeout());
      }
      if (other.getMemory() != 0) {
        setMemory(other.getMemory());
      }
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        onChanged();
      }
      internalGetMutableEnv().mergeFrom(
          other.internalGetEnv());
      switch (other.getSourceCase()) {
        case IMAGE: {
          mergeImage(other.getImage());
          break;
        }
        case SOURCE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getImageFieldBuilder().getBuilder(),
                  extensionRegistry);
              sourceCase_ = 1;
              break;
            } // case 10
            case 80: {
              workers_ = input.readInt32();

              break;
            } // case 80
            case 88: {
              timeout_ = input.readInt32();

              break;
            } // case 88
            case 96: {
              memory_ = input.readInt32();

              break;
            } // case 96
            case 106: {
              type_ = input.readStringRequireUtf8();

              break;
            } // case 106
            case 114: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              env__ = input.readMessage(
                  EnvDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableEnv().getMutableMap().put(
                  env__.getKey(), env__.getValue());
              break;
            } // case 114
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int sourceCase_ = 0;
    private java.lang.Object source_;
    public SourceCase
        getSourceCase() {
      return SourceCase.forNumber(
          sourceCase_);
    }

    public Builder clearSource() {
      sourceCase_ = 0;
      source_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        io.nitric.proto.deploy.v1.ImageSource, io.nitric.proto.deploy.v1.ImageSource.Builder, io.nitric.proto.deploy.v1.ImageSourceOrBuilder> imageBuilder_;
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     * @return Whether the image field is set.
     */
    @java.lang.Override
    public boolean hasImage() {
      return sourceCase_ == 1;
    }
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     * @return The image.
     */
    @java.lang.Override
    public io.nitric.proto.deploy.v1.ImageSource getImage() {
      if (imageBuilder_ == null) {
        if (sourceCase_ == 1) {
          return (io.nitric.proto.deploy.v1.ImageSource) source_;
        }
        return io.nitric.proto.deploy.v1.ImageSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 1) {
          return imageBuilder_.getMessage();
        }
        return io.nitric.proto.deploy.v1.ImageSource.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     */
    public Builder setImage(io.nitric.proto.deploy.v1.ImageSource value) {
      if (imageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        imageBuilder_.setMessage(value);
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     */
    public Builder setImage(
        io.nitric.proto.deploy.v1.ImageSource.Builder builderForValue) {
      if (imageBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        imageBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     */
    public Builder mergeImage(io.nitric.proto.deploy.v1.ImageSource value) {
      if (imageBuilder_ == null) {
        if (sourceCase_ == 1 &&
            source_ != io.nitric.proto.deploy.v1.ImageSource.getDefaultInstance()) {
          source_ = io.nitric.proto.deploy.v1.ImageSource.newBuilder((io.nitric.proto.deploy.v1.ImageSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 1) {
          imageBuilder_.mergeFrom(value);
        } else {
          imageBuilder_.setMessage(value);
        }
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     */
    public Builder clearImage() {
      if (imageBuilder_ == null) {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
        }
        imageBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     */
    public io.nitric.proto.deploy.v1.ImageSource.Builder getImageBuilder() {
      return getImageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     */
    @java.lang.Override
    public io.nitric.proto.deploy.v1.ImageSourceOrBuilder getImageOrBuilder() {
      if ((sourceCase_ == 1) && (imageBuilder_ != null)) {
        return imageBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 1) {
          return (io.nitric.proto.deploy.v1.ImageSource) source_;
        }
        return io.nitric.proto.deploy.v1.ImageSource.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Container image as a execution unit
     * </pre>
     *
     * <code>.nitric.deploy.v1.ImageSource image = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.nitric.proto.deploy.v1.ImageSource, io.nitric.proto.deploy.v1.ImageSource.Builder, io.nitric.proto.deploy.v1.ImageSourceOrBuilder> 
        getImageFieldBuilder() {
      if (imageBuilder_ == null) {
        if (!(sourceCase_ == 1)) {
          source_ = io.nitric.proto.deploy.v1.ImageSource.getDefaultInstance();
        }
        imageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.nitric.proto.deploy.v1.ImageSource, io.nitric.proto.deploy.v1.ImageSource.Builder, io.nitric.proto.deploy.v1.ImageSourceOrBuilder>(
                (io.nitric.proto.deploy.v1.ImageSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 1;
      onChanged();;
      return imageBuilder_;
    }

    private int workers_ ;
    /**
     * <pre>
     * Expected worker count for this execution unit
     * </pre>
     *
     * <code>int32 workers = 10;</code>
     * @return The workers.
     */
    @java.lang.Override
    public int getWorkers() {
      return workers_;
    }
    /**
     * <pre>
     * Expected worker count for this execution unit
     * </pre>
     *
     * <code>int32 workers = 10;</code>
     * @param value The workers to set.
     * @return This builder for chaining.
     */
    public Builder setWorkers(int value) {
      
      workers_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Expected worker count for this execution unit
     * </pre>
     *
     * <code>int32 workers = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearWorkers() {
      
      workers_ = 0;
      onChanged();
      return this;
    }

    private int timeout_ ;
    /**
     * <pre>
     * Configurable timeout for request handling
     * </pre>
     *
     * <code>int32 timeout = 11 [deprecated = true];</code>
     * @deprecated nitric.deploy.v1.ExecutionUnit.timeout is deprecated.
     *     See proto/deploy/v1/deploy.proto;l=108
     * @return The timeout.
     */
    @java.lang.Override
    @java.lang.Deprecated public int getTimeout() {
      return timeout_;
    }
    /**
     * <pre>
     * Configurable timeout for request handling
     * </pre>
     *
     * <code>int32 timeout = 11 [deprecated = true];</code>
     * @deprecated nitric.deploy.v1.ExecutionUnit.timeout is deprecated.
     *     See proto/deploy/v1/deploy.proto;l=108
     * @param value The timeout to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setTimeout(int value) {
      
      timeout_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configurable timeout for request handling
     * </pre>
     *
     * <code>int32 timeout = 11 [deprecated = true];</code>
     * @deprecated nitric.deploy.v1.ExecutionUnit.timeout is deprecated.
     *     See proto/deploy/v1/deploy.proto;l=108
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearTimeout() {
      
      timeout_ = 0;
      onChanged();
      return this;
    }

    private int memory_ ;
    /**
     * <pre>
     * Configurable memory size for this instance
     * </pre>
     *
     * <code>int32 memory = 12 [deprecated = true];</code>
     * @deprecated nitric.deploy.v1.ExecutionUnit.memory is deprecated.
     *     See proto/deploy/v1/deploy.proto;l=110
     * @return The memory.
     */
    @java.lang.Override
    @java.lang.Deprecated public int getMemory() {
      return memory_;
    }
    /**
     * <pre>
     * Configurable memory size for this instance
     * </pre>
     *
     * <code>int32 memory = 12 [deprecated = true];</code>
     * @deprecated nitric.deploy.v1.ExecutionUnit.memory is deprecated.
     *     See proto/deploy/v1/deploy.proto;l=110
     * @param value The memory to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setMemory(int value) {
      
      memory_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configurable memory size for this instance
     * </pre>
     *
     * <code>int32 memory = 12 [deprecated = true];</code>
     * @deprecated nitric.deploy.v1.ExecutionUnit.memory is deprecated.
     *     See proto/deploy/v1/deploy.proto;l=110
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearMemory() {
      
      memory_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object type_ = "";
    /**
     * <pre>
     * A simple type property
     * describes the requested type of execution unit that this should be
     * for this project, a provider can implement how this request is satisfied
     * in any way
     * </pre>
     *
     * <code>string type = 13;</code>
     * @return The type.
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A simple type property
     * describes the requested type of execution unit that this should be
     * for this project, a provider can implement how this request is satisfied
     * in any way
     * </pre>
     *
     * <code>string type = 13;</code>
     * @return The bytes for type.
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A simple type property
     * describes the requested type of execution unit that this should be
     * for this project, a provider can implement how this request is satisfied
     * in any way
     * </pre>
     *
     * <code>string type = 13;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A simple type property
     * describes the requested type of execution unit that this should be
     * for this project, a provider can implement how this request is satisfied
     * in any way
     * </pre>
     *
     * <code>string type = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = getDefaultInstance().getType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A simple type property
     * describes the requested type of execution unit that this should be
     * for this project, a provider can implement how this request is satisfied
     * in any way
     * </pre>
     *
     * <code>string type = 13;</code>
     * @param value The bytes for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      type_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> env_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetEnv() {
      if (env_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EnvDefaultEntryHolder.defaultEntry);
      }
      return env_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableEnv() {
      onChanged();;
      if (env_ == null) {
        env_ = com.google.protobuf.MapField.newMapField(
            EnvDefaultEntryHolder.defaultEntry);
      }
      if (!env_.isMutable()) {
        env_ = env_.copy();
      }
      return env_;
    }

    public int getEnvCount() {
      return internalGetEnv().getMap().size();
    }
    /**
     * <pre>
     * Environment variables for this execution unit
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 14;</code>
     */

    @java.lang.Override
    public boolean containsEnv(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetEnv().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEnvMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getEnv() {
      return getEnvMap();
    }
    /**
     * <pre>
     * Environment variables for this execution unit
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 14;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getEnvMap() {
      return internalGetEnv().getMap();
    }
    /**
     * <pre>
     * Environment variables for this execution unit
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getEnvOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetEnv().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Environment variables for this execution unit
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 14;</code>
     */
    @java.lang.Override

    public java.lang.String getEnvOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetEnv().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearEnv() {
      internalGetMutableEnv().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Environment variables for this execution unit
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 14;</code>
     */

    public Builder removeEnv(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableEnv().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableEnv() {
      return internalGetMutableEnv().getMutableMap();
    }
    /**
     * <pre>
     * Environment variables for this execution unit
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 14;</code>
     */
    public Builder putEnv(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableEnv().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Environment variables for this execution unit
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 14;</code>
     */

    public Builder putAllEnv(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableEnv().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:nitric.deploy.v1.ExecutionUnit)
  }

  // @@protoc_insertion_point(class_scope:nitric.deploy.v1.ExecutionUnit)
  private static final io.nitric.proto.deploy.v1.ExecutionUnit DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.nitric.proto.deploy.v1.ExecutionUnit();
  }

  public static io.nitric.proto.deploy.v1.ExecutionUnit getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExecutionUnit>
      PARSER = new com.google.protobuf.AbstractParser<ExecutionUnit>() {
    @java.lang.Override
    public ExecutionUnit parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ExecutionUnit> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExecutionUnit> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.nitric.proto.deploy.v1.ExecutionUnit getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

