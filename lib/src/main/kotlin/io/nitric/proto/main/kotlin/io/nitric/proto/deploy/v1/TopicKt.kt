//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/deploy/v1/deploy.proto

package io.nitric.proto.deploy.v1;

@kotlin.jvm.JvmName("-initializetopic")
inline fun topic(block: io.nitric.proto.deploy.v1.TopicKt.Dsl.() -> kotlin.Unit): io.nitric.proto.deploy.v1.Topic =
  io.nitric.proto.deploy.v1.TopicKt.Dsl._create(io.nitric.proto.deploy.v1.Topic.newBuilder()).apply { block() }._build()
object TopicKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.deploy.v1.Topic.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.deploy.v1.Topic.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.deploy.v1.Topic = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class SubscriptionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * TODO: Include topic specifications here
     * </pre>
     *
     * <code>repeated .nitric.deploy.v1.SubscriptionTarget subscriptions = 1;</code>
     */
     val subscriptions: com.google.protobuf.kotlin.DslList<io.nitric.proto.deploy.v1.SubscriptionTarget, SubscriptionsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSubscriptionsList()
      )
    /**
     * <pre>
     * TODO: Include topic specifications here
     * </pre>
     *
     * <code>repeated .nitric.deploy.v1.SubscriptionTarget subscriptions = 1;</code>
     * @param value The subscriptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSubscriptions")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.deploy.v1.SubscriptionTarget, SubscriptionsProxy>.add(value: io.nitric.proto.deploy.v1.SubscriptionTarget) {
      _builder.addSubscriptions(value)
    }
    /**
     * <pre>
     * TODO: Include topic specifications here
     * </pre>
     *
     * <code>repeated .nitric.deploy.v1.SubscriptionTarget subscriptions = 1;</code>
     * @param value The subscriptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSubscriptions")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.deploy.v1.SubscriptionTarget, SubscriptionsProxy>.plusAssign(value: io.nitric.proto.deploy.v1.SubscriptionTarget) {
      add(value)
    }
    /**
     * <pre>
     * TODO: Include topic specifications here
     * </pre>
     *
     * <code>repeated .nitric.deploy.v1.SubscriptionTarget subscriptions = 1;</code>
     * @param values The subscriptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSubscriptions")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.deploy.v1.SubscriptionTarget, SubscriptionsProxy>.addAll(values: kotlin.collections.Iterable<io.nitric.proto.deploy.v1.SubscriptionTarget>) {
      _builder.addAllSubscriptions(values)
    }
    /**
     * <pre>
     * TODO: Include topic specifications here
     * </pre>
     *
     * <code>repeated .nitric.deploy.v1.SubscriptionTarget subscriptions = 1;</code>
     * @param values The subscriptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSubscriptions")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.deploy.v1.SubscriptionTarget, SubscriptionsProxy>.plusAssign(values: kotlin.collections.Iterable<io.nitric.proto.deploy.v1.SubscriptionTarget>) {
      addAll(values)
    }
    /**
     * <pre>
     * TODO: Include topic specifications here
     * </pre>
     *
     * <code>repeated .nitric.deploy.v1.SubscriptionTarget subscriptions = 1;</code>
     * @param index The index to set the value at.
     * @param value The subscriptions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSubscriptions")
    operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.deploy.v1.SubscriptionTarget, SubscriptionsProxy>.set(index: kotlin.Int, value: io.nitric.proto.deploy.v1.SubscriptionTarget) {
      _builder.setSubscriptions(index, value)
    }
    /**
     * <pre>
     * TODO: Include topic specifications here
     * </pre>
     *
     * <code>repeated .nitric.deploy.v1.SubscriptionTarget subscriptions = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSubscriptions")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.deploy.v1.SubscriptionTarget, SubscriptionsProxy>.clear() {
      _builder.clearSubscriptions()
    }

  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.deploy.v1.Topic.copy(block: io.nitric.proto.deploy.v1.TopicKt.Dsl.() -> kotlin.Unit): io.nitric.proto.deploy.v1.Topic =
  io.nitric.proto.deploy.v1.TopicKt.Dsl._create(this.toBuilder()).apply { block() }._build()

