//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/faas/v1/faas.proto

package io.nitric.proto.faas.v1;

@kotlin.jvm.JvmName("-initializesubscriptionWorker")
inline fun subscriptionWorker(block: io.nitric.proto.faas.v1.SubscriptionWorkerKt.Dsl.() -> kotlin.Unit): io.nitric.proto.faas.v1.SubscriptionWorker =
  io.nitric.proto.faas.v1.SubscriptionWorkerKt.Dsl._create(io.nitric.proto.faas.v1.SubscriptionWorker.newBuilder()).apply { block() }._build()
object SubscriptionWorkerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.faas.v1.SubscriptionWorker.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.faas.v1.SubscriptionWorker.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.faas.v1.SubscriptionWorker = _builder.build()

    /**
     * <code>string topic = 1;</code>
     */
    var topic: kotlin.String
      @JvmName("getTopic")
      get() = _builder.getTopic()
      @JvmName("setTopic")
      set(value) {
        _builder.setTopic(value)
      }
    /**
     * <code>string topic = 1;</code>
     */
    fun clearTopic() {
      _builder.clearTopic()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.faas.v1.SubscriptionWorker.copy(block: io.nitric.proto.faas.v1.SubscriptionWorkerKt.Dsl.() -> kotlin.Unit): io.nitric.proto.faas.v1.SubscriptionWorker =
  io.nitric.proto.faas.v1.SubscriptionWorkerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

