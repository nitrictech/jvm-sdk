//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/resource/v1/resource.proto

package io.nitric.proto.resource.v1;

@kotlin.jvm.JvmName("-initializeresourceDetailsRequest")
inline fun resourceDetailsRequest(block: io.nitric.proto.resource.v1.ResourceDetailsRequestKt.Dsl.() -> kotlin.Unit): io.nitric.proto.resource.v1.ResourceDetailsRequest =
  io.nitric.proto.resource.v1.ResourceDetailsRequestKt.Dsl._create(io.nitric.proto.resource.v1.ResourceDetailsRequest.newBuilder()).apply { block() }._build()
object ResourceDetailsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.resource.v1.ResourceDetailsRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.resource.v1.ResourceDetailsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.resource.v1.ResourceDetailsRequest = _builder.build()

    /**
     * <code>.nitric.resource.v1.Resource resource = 1;</code>
     */
    var resource: io.nitric.proto.resource.v1.Resource
      @JvmName("getResource")
      get() = _builder.getResource()
      @JvmName("setResource")
      set(value) {
        _builder.setResource(value)
      }
    /**
     * <code>.nitric.resource.v1.Resource resource = 1;</code>
     */
    fun clearResource() {
      _builder.clearResource()
    }
    /**
     * <code>.nitric.resource.v1.Resource resource = 1;</code>
     * @return Whether the resource field is set.
     */
    fun hasResource(): kotlin.Boolean {
      return _builder.hasResource()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.resource.v1.ResourceDetailsRequest.copy(block: io.nitric.proto.resource.v1.ResourceDetailsRequestKt.Dsl.() -> kotlin.Unit): io.nitric.proto.resource.v1.ResourceDetailsRequest =
  io.nitric.proto.resource.v1.ResourceDetailsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.nitric.proto.resource.v1.ResourceDetailsRequestOrBuilder.resourceOrNull: io.nitric.proto.resource.v1.Resource?
  get() = if (hasResource()) getResource() else null

