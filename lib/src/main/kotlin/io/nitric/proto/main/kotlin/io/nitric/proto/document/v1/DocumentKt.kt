//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/document/v1/document.proto

package io.nitric.proto.document.v1;

@kotlin.jvm.JvmName("-initializedocument")
inline fun document(block: io.nitric.proto.document.v1.DocumentKt.Dsl.() -> kotlin.Unit): io.nitric.proto.document.v1.Document =
  io.nitric.proto.document.v1.DocumentKt.Dsl._create(io.nitric.proto.document.v1.Document.newBuilder()).apply { block() }._build()
object DocumentKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.document.v1.Document.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.document.v1.Document.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.document.v1.Document = _builder.build()

    /**
     * <pre>
     * The document content (JSON object)
     * </pre>
     *
     * <code>.google.protobuf.Struct content = 1 [(.validate.rules) = { ... }</code>
     */
    var content: com.google.protobuf.Struct
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * <pre>
     * The document content (JSON object)
     * </pre>
     *
     * <code>.google.protobuf.Struct content = 1 [(.validate.rules) = { ... }</code>
     */
    fun clearContent() {
      _builder.clearContent()
    }
    /**
     * <pre>
     * The document content (JSON object)
     * </pre>
     *
     * <code>.google.protobuf.Struct content = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the content field is set.
     */
    fun hasContent(): kotlin.Boolean {
      return _builder.hasContent()
    }

    /**
     * <pre>
     * The document's unique key, including collection/sub-collections
     * </pre>
     *
     * <code>.nitric.document.v1.Key key = 2 [(.validate.rules) = { ... }</code>
     */
    var key: io.nitric.proto.document.v1.Key
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * <pre>
     * The document's unique key, including collection/sub-collections
     * </pre>
     *
     * <code>.nitric.document.v1.Key key = 2 [(.validate.rules) = { ... }</code>
     */
    fun clearKey() {
      _builder.clearKey()
    }
    /**
     * <pre>
     * The document's unique key, including collection/sub-collections
     * </pre>
     *
     * <code>.nitric.document.v1.Key key = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the key field is set.
     */
    fun hasKey(): kotlin.Boolean {
      return _builder.hasKey()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.document.v1.Document.copy(block: io.nitric.proto.document.v1.DocumentKt.Dsl.() -> kotlin.Unit): io.nitric.proto.document.v1.Document =
  io.nitric.proto.document.v1.DocumentKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.nitric.proto.document.v1.DocumentOrBuilder.contentOrNull: com.google.protobuf.Struct?
  get() = if (hasContent()) getContent() else null

val io.nitric.proto.document.v1.DocumentOrBuilder.keyOrNull: io.nitric.proto.document.v1.Key?
  get() = if (hasKey()) getKey() else null

