//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/faas/v1/faas.proto

package io.nitric.proto.faas.v1;

@kotlin.jvm.JvmName("-initializescheduleWorker")
inline fun scheduleWorker(block: io.nitric.proto.faas.v1.ScheduleWorkerKt.Dsl.() -> kotlin.Unit): io.nitric.proto.faas.v1.ScheduleWorker =
  io.nitric.proto.faas.v1.ScheduleWorkerKt.Dsl._create(io.nitric.proto.faas.v1.ScheduleWorker.newBuilder()).apply { block() }._build()
object ScheduleWorkerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.faas.v1.ScheduleWorker.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.faas.v1.ScheduleWorker.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.faas.v1.ScheduleWorker = _builder.build()

    /**
     * <code>string key = 1;</code>
     */
    var key: kotlin.String
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * <code>string key = 1;</code>
     */
    fun clearKey() {
      _builder.clearKey()
    }

    /**
     * <code>.nitric.faas.v1.ScheduleRate rate = 10;</code>
     */
    var rate: io.nitric.proto.faas.v1.ScheduleRate
      @JvmName("getRate")
      get() = _builder.getRate()
      @JvmName("setRate")
      set(value) {
        _builder.setRate(value)
      }
    /**
     * <code>.nitric.faas.v1.ScheduleRate rate = 10;</code>
     */
    fun clearRate() {
      _builder.clearRate()
    }
    /**
     * <code>.nitric.faas.v1.ScheduleRate rate = 10;</code>
     * @return Whether the rate field is set.
     */
    fun hasRate(): kotlin.Boolean {
      return _builder.hasRate()
    }

    /**
     * <code>.nitric.faas.v1.ScheduleCron cron = 11;</code>
     */
    var cron: io.nitric.proto.faas.v1.ScheduleCron
      @JvmName("getCron")
      get() = _builder.getCron()
      @JvmName("setCron")
      set(value) {
        _builder.setCron(value)
      }
    /**
     * <code>.nitric.faas.v1.ScheduleCron cron = 11;</code>
     */
    fun clearCron() {
      _builder.clearCron()
    }
    /**
     * <code>.nitric.faas.v1.ScheduleCron cron = 11;</code>
     * @return Whether the cron field is set.
     */
    fun hasCron(): kotlin.Boolean {
      return _builder.hasCron()
    }
    val cadenceCase: io.nitric.proto.faas.v1.ScheduleWorker.CadenceCase
      @JvmName("getCadenceCase")
      get() = _builder.getCadenceCase()

    fun clearCadence() {
      _builder.clearCadence()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.faas.v1.ScheduleWorker.copy(block: io.nitric.proto.faas.v1.ScheduleWorkerKt.Dsl.() -> kotlin.Unit): io.nitric.proto.faas.v1.ScheduleWorker =
  io.nitric.proto.faas.v1.ScheduleWorkerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.nitric.proto.faas.v1.ScheduleWorkerOrBuilder.rateOrNull: io.nitric.proto.faas.v1.ScheduleRate?
  get() = if (hasRate()) getRate() else null

val io.nitric.proto.faas.v1.ScheduleWorkerOrBuilder.cronOrNull: io.nitric.proto.faas.v1.ScheduleCron?
  get() = if (hasCron()) getCron() else null

