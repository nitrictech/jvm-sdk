//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/document/v1/document.proto

package io.nitric.proto.document.v1;

@kotlin.jvm.JvmName("-initializeexpression")
inline fun expression(block: io.nitric.proto.document.v1.ExpressionKt.Dsl.() -> kotlin.Unit): io.nitric.proto.document.v1.Expression =
  io.nitric.proto.document.v1.ExpressionKt.Dsl._create(io.nitric.proto.document.v1.Expression.newBuilder()).apply { block() }._build()
object ExpressionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.document.v1.Expression.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.document.v1.Expression.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.document.v1.Expression = _builder.build()

    /**
     * <pre>
     * The query operand or attribute
     * </pre>
     *
     * <code>string operand = 1;</code>
     */
    var operand: kotlin.String
      @JvmName("getOperand")
      get() = _builder.getOperand()
      @JvmName("setOperand")
      set(value) {
        _builder.setOperand(value)
      }
    /**
     * <pre>
     * The query operand or attribute
     * </pre>
     *
     * <code>string operand = 1;</code>
     */
    fun clearOperand() {
      _builder.clearOperand()
    }

    /**
     * <pre>
     * The query operator [ == | &lt; | &lt;= | &gt; | &gt;= | startsWith ]
     * </pre>
     *
     * <code>string operator = 2 [(.validate.rules) = { ... }</code>
     */
    var operator: kotlin.String
      @JvmName("getOperator")
      get() = _builder.getOperator()
      @JvmName("setOperator")
      set(value) {
        _builder.setOperator(value)
      }
    /**
     * <pre>
     * The query operator [ == | &lt; | &lt;= | &gt; | &gt;= | startsWith ]
     * </pre>
     *
     * <code>string operator = 2 [(.validate.rules) = { ... }</code>
     */
    fun clearOperator() {
      _builder.clearOperator()
    }

    /**
     * <pre>
     * The query expression value
     * </pre>
     *
     * <code>.nitric.document.v1.ExpressionValue value = 3 [(.validate.rules) = { ... }</code>
     */
    var value: io.nitric.proto.document.v1.ExpressionValue
      @JvmName("getValue")
      get() = _builder.getValue()
      @JvmName("setValue")
      set(value) {
        _builder.setValue(value)
      }
    /**
     * <pre>
     * The query expression value
     * </pre>
     *
     * <code>.nitric.document.v1.ExpressionValue value = 3 [(.validate.rules) = { ... }</code>
     */
    fun clearValue() {
      _builder.clearValue()
    }
    /**
     * <pre>
     * The query expression value
     * </pre>
     *
     * <code>.nitric.document.v1.ExpressionValue value = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the value field is set.
     */
    fun hasValue(): kotlin.Boolean {
      return _builder.hasValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.document.v1.Expression.copy(block: io.nitric.proto.document.v1.ExpressionKt.Dsl.() -> kotlin.Unit): io.nitric.proto.document.v1.Expression =
  io.nitric.proto.document.v1.ExpressionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.nitric.proto.document.v1.ExpressionOrBuilder.valueOrNull: io.nitric.proto.document.v1.ExpressionValue?
  get() = if (hasValue()) getValue() else null

