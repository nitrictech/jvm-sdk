//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/deploy/v1/deploy.proto

package io.nitric.proto.deploy.v1;

@kotlin.jvm.JvmName("-initializeresource")
inline fun resource(block: io.nitric.proto.deploy.v1.ResourceKt.Dsl.() -> kotlin.Unit): io.nitric.proto.deploy.v1.Resource =
  io.nitric.proto.deploy.v1.ResourceKt.Dsl._create(io.nitric.proto.deploy.v1.Resource.newBuilder()).apply { block() }._build()
object ResourceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.deploy.v1.Resource.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.deploy.v1.Resource.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.deploy.v1.Resource = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>.nitric.resource.v1.ResourceType type = 2;</code>
     */
     var type: io.nitric.proto.resource.v1.ResourceType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>.nitric.resource.v1.ResourceType type = 2;</code>
     */
    fun clearType() {
      _builder.clearType()
    }

    /**
     * <code>.nitric.deploy.v1.ExecutionUnit execution_unit = 10;</code>
     */
    var executionUnit: io.nitric.proto.deploy.v1.ExecutionUnit
      @JvmName("getExecutionUnit")
      get() = _builder.getExecutionUnit()
      @JvmName("setExecutionUnit")
      set(value) {
        _builder.setExecutionUnit(value)
      }
    /**
     * <code>.nitric.deploy.v1.ExecutionUnit execution_unit = 10;</code>
     */
    fun clearExecutionUnit() {
      _builder.clearExecutionUnit()
    }
    /**
     * <code>.nitric.deploy.v1.ExecutionUnit execution_unit = 10;</code>
     * @return Whether the executionUnit field is set.
     */
    fun hasExecutionUnit(): kotlin.Boolean {
      return _builder.hasExecutionUnit()
    }

    /**
     * <code>.nitric.deploy.v1.Bucket bucket = 11;</code>
     */
    var bucket: io.nitric.proto.deploy.v1.Bucket
      @JvmName("getBucket")
      get() = _builder.getBucket()
      @JvmName("setBucket")
      set(value) {
        _builder.setBucket(value)
      }
    /**
     * <code>.nitric.deploy.v1.Bucket bucket = 11;</code>
     */
    fun clearBucket() {
      _builder.clearBucket()
    }
    /**
     * <code>.nitric.deploy.v1.Bucket bucket = 11;</code>
     * @return Whether the bucket field is set.
     */
    fun hasBucket(): kotlin.Boolean {
      return _builder.hasBucket()
    }

    /**
     * <code>.nitric.deploy.v1.Topic topic = 12;</code>
     */
    var topic: io.nitric.proto.deploy.v1.Topic
      @JvmName("getTopic")
      get() = _builder.getTopic()
      @JvmName("setTopic")
      set(value) {
        _builder.setTopic(value)
      }
    /**
     * <code>.nitric.deploy.v1.Topic topic = 12;</code>
     */
    fun clearTopic() {
      _builder.clearTopic()
    }
    /**
     * <code>.nitric.deploy.v1.Topic topic = 12;</code>
     * @return Whether the topic field is set.
     */
    fun hasTopic(): kotlin.Boolean {
      return _builder.hasTopic()
    }

    /**
     * <code>.nitric.deploy.v1.Queue queue = 13;</code>
     */
    var queue: io.nitric.proto.deploy.v1.Queue
      @JvmName("getQueue")
      get() = _builder.getQueue()
      @JvmName("setQueue")
      set(value) {
        _builder.setQueue(value)
      }
    /**
     * <code>.nitric.deploy.v1.Queue queue = 13;</code>
     */
    fun clearQueue() {
      _builder.clearQueue()
    }
    /**
     * <code>.nitric.deploy.v1.Queue queue = 13;</code>
     * @return Whether the queue field is set.
     */
    fun hasQueue(): kotlin.Boolean {
      return _builder.hasQueue()
    }

    /**
     * <code>.nitric.deploy.v1.Api api = 14;</code>
     */
    var api: io.nitric.proto.deploy.v1.Api
      @JvmName("getApi")
      get() = _builder.getApi()
      @JvmName("setApi")
      set(value) {
        _builder.setApi(value)
      }
    /**
     * <code>.nitric.deploy.v1.Api api = 14;</code>
     */
    fun clearApi() {
      _builder.clearApi()
    }
    /**
     * <code>.nitric.deploy.v1.Api api = 14;</code>
     * @return Whether the api field is set.
     */
    fun hasApi(): kotlin.Boolean {
      return _builder.hasApi()
    }

    /**
     * <code>.nitric.deploy.v1.Policy policy = 15;</code>
     */
    var policy: io.nitric.proto.deploy.v1.Policy
      @JvmName("getPolicy")
      get() = _builder.getPolicy()
      @JvmName("setPolicy")
      set(value) {
        _builder.setPolicy(value)
      }
    /**
     * <code>.nitric.deploy.v1.Policy policy = 15;</code>
     */
    fun clearPolicy() {
      _builder.clearPolicy()
    }
    /**
     * <code>.nitric.deploy.v1.Policy policy = 15;</code>
     * @return Whether the policy field is set.
     */
    fun hasPolicy(): kotlin.Boolean {
      return _builder.hasPolicy()
    }

    /**
     * <code>.nitric.deploy.v1.Schedule schedule = 16;</code>
     */
    var schedule: io.nitric.proto.deploy.v1.Schedule
      @JvmName("getSchedule")
      get() = _builder.getSchedule()
      @JvmName("setSchedule")
      set(value) {
        _builder.setSchedule(value)
      }
    /**
     * <code>.nitric.deploy.v1.Schedule schedule = 16;</code>
     */
    fun clearSchedule() {
      _builder.clearSchedule()
    }
    /**
     * <code>.nitric.deploy.v1.Schedule schedule = 16;</code>
     * @return Whether the schedule field is set.
     */
    fun hasSchedule(): kotlin.Boolean {
      return _builder.hasSchedule()
    }

    /**
     * <code>.nitric.deploy.v1.Collection collection = 17;</code>
     */
    var collection: io.nitric.proto.deploy.v1.Collection
      @JvmName("getCollection")
      get() = _builder.getCollection()
      @JvmName("setCollection")
      set(value) {
        _builder.setCollection(value)
      }
    /**
     * <code>.nitric.deploy.v1.Collection collection = 17;</code>
     */
    fun clearCollection() {
      _builder.clearCollection()
    }
    /**
     * <code>.nitric.deploy.v1.Collection collection = 17;</code>
     * @return Whether the collection field is set.
     */
    fun hasCollection(): kotlin.Boolean {
      return _builder.hasCollection()
    }

    /**
     * <code>.nitric.deploy.v1.Secret secret = 18;</code>
     */
    var secret: io.nitric.proto.deploy.v1.Secret
      @JvmName("getSecret")
      get() = _builder.getSecret()
      @JvmName("setSecret")
      set(value) {
        _builder.setSecret(value)
      }
    /**
     * <code>.nitric.deploy.v1.Secret secret = 18;</code>
     */
    fun clearSecret() {
      _builder.clearSecret()
    }
    /**
     * <code>.nitric.deploy.v1.Secret secret = 18;</code>
     * @return Whether the secret field is set.
     */
    fun hasSecret(): kotlin.Boolean {
      return _builder.hasSecret()
    }

    /**
     * <code>.nitric.deploy.v1.Websocket websocket = 19;</code>
     */
    var websocket: io.nitric.proto.deploy.v1.Websocket
      @JvmName("getWebsocket")
      get() = _builder.getWebsocket()
      @JvmName("setWebsocket")
      set(value) {
        _builder.setWebsocket(value)
      }
    /**
     * <code>.nitric.deploy.v1.Websocket websocket = 19;</code>
     */
    fun clearWebsocket() {
      _builder.clearWebsocket()
    }
    /**
     * <code>.nitric.deploy.v1.Websocket websocket = 19;</code>
     * @return Whether the websocket field is set.
     */
    fun hasWebsocket(): kotlin.Boolean {
      return _builder.hasWebsocket()
    }

    /**
     * <code>.nitric.deploy.v1.Http http = 20;</code>
     */
    var http: io.nitric.proto.deploy.v1.Http
      @JvmName("getHttp")
      get() = _builder.getHttp()
      @JvmName("setHttp")
      set(value) {
        _builder.setHttp(value)
      }
    /**
     * <code>.nitric.deploy.v1.Http http = 20;</code>
     */
    fun clearHttp() {
      _builder.clearHttp()
    }
    /**
     * <code>.nitric.deploy.v1.Http http = 20;</code>
     * @return Whether the http field is set.
     */
    fun hasHttp(): kotlin.Boolean {
      return _builder.hasHttp()
    }
    val configCase: io.nitric.proto.deploy.v1.Resource.ConfigCase
      @JvmName("getConfigCase")
      get() = _builder.getConfigCase()

    fun clearConfig() {
      _builder.clearConfig()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.deploy.v1.Resource.copy(block: io.nitric.proto.deploy.v1.ResourceKt.Dsl.() -> kotlin.Unit): io.nitric.proto.deploy.v1.Resource =
  io.nitric.proto.deploy.v1.ResourceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.nitric.proto.deploy.v1.ResourceOrBuilder.executionUnitOrNull: io.nitric.proto.deploy.v1.ExecutionUnit?
  get() = if (hasExecutionUnit()) getExecutionUnit() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.bucketOrNull: io.nitric.proto.deploy.v1.Bucket?
  get() = if (hasBucket()) getBucket() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.topicOrNull: io.nitric.proto.deploy.v1.Topic?
  get() = if (hasTopic()) getTopic() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.queueOrNull: io.nitric.proto.deploy.v1.Queue?
  get() = if (hasQueue()) getQueue() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.apiOrNull: io.nitric.proto.deploy.v1.Api?
  get() = if (hasApi()) getApi() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.policyOrNull: io.nitric.proto.deploy.v1.Policy?
  get() = if (hasPolicy()) getPolicy() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.scheduleOrNull: io.nitric.proto.deploy.v1.Schedule?
  get() = if (hasSchedule()) getSchedule() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.collectionOrNull: io.nitric.proto.deploy.v1.Collection?
  get() = if (hasCollection()) getCollection() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.secretOrNull: io.nitric.proto.deploy.v1.Secret?
  get() = if (hasSecret()) getSecret() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.websocketOrNull: io.nitric.proto.deploy.v1.Websocket?
  get() = if (hasWebsocket()) getWebsocket() else null

val io.nitric.proto.deploy.v1.ResourceOrBuilder.httpOrNull: io.nitric.proto.deploy.v1.Http?
  get() = if (hasHttp()) getHttp() else null

