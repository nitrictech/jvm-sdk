//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/faas/v1/faas.proto

package io.nitric.proto.faas.v1;

@kotlin.jvm.JvmName("-initializebucketNotificationWorker")
inline fun bucketNotificationWorker(block: io.nitric.proto.faas.v1.BucketNotificationWorkerKt.Dsl.() -> kotlin.Unit): io.nitric.proto.faas.v1.BucketNotificationWorker =
  io.nitric.proto.faas.v1.BucketNotificationWorkerKt.Dsl._create(io.nitric.proto.faas.v1.BucketNotificationWorker.newBuilder()).apply { block() }._build()
object BucketNotificationWorkerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.faas.v1.BucketNotificationWorker.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.faas.v1.BucketNotificationWorker.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.faas.v1.BucketNotificationWorker = _builder.build()

    /**
     * <code>string bucket = 1;</code>
     */
    var bucket: kotlin.String
      @JvmName("getBucket")
      get() = _builder.getBucket()
      @JvmName("setBucket")
      set(value) {
        _builder.setBucket(value)
      }
    /**
     * <code>string bucket = 1;</code>
     */
    fun clearBucket() {
      _builder.clearBucket()
    }

    /**
     * <code>.nitric.faas.v1.BucketNotificationConfig config = 2;</code>
     */
    var config: io.nitric.proto.faas.v1.BucketNotificationConfig
      @JvmName("getConfig")
      get() = _builder.getConfig()
      @JvmName("setConfig")
      set(value) {
        _builder.setConfig(value)
      }
    /**
     * <code>.nitric.faas.v1.BucketNotificationConfig config = 2;</code>
     */
    fun clearConfig() {
      _builder.clearConfig()
    }
    /**
     * <code>.nitric.faas.v1.BucketNotificationConfig config = 2;</code>
     * @return Whether the config field is set.
     */
    fun hasConfig(): kotlin.Boolean {
      return _builder.hasConfig()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.faas.v1.BucketNotificationWorker.copy(block: io.nitric.proto.faas.v1.BucketNotificationWorkerKt.Dsl.() -> kotlin.Unit): io.nitric.proto.faas.v1.BucketNotificationWorker =
  io.nitric.proto.faas.v1.BucketNotificationWorkerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.nitric.proto.faas.v1.BucketNotificationWorkerOrBuilder.configOrNull: io.nitric.proto.faas.v1.BucketNotificationConfig?
  get() = if (hasConfig()) getConfig() else null

