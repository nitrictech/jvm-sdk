//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/event/v1/event.proto

package io.nitric.proto.event.v1;

@kotlin.jvm.JvmName("-initializetopicListResponse")
inline fun topicListResponse(block: io.nitric.proto.event.v1.TopicListResponseKt.Dsl.() -> kotlin.Unit): io.nitric.proto.event.v1.TopicListResponse =
  io.nitric.proto.event.v1.TopicListResponseKt.Dsl._create(io.nitric.proto.event.v1.TopicListResponse.newBuilder()).apply { block() }._build()
object TopicListResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: io.nitric.proto.event.v1.TopicListResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.nitric.proto.event.v1.TopicListResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.nitric.proto.event.v1.TopicListResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class TopicsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * The list of found topics
     * </pre>
     *
     * <code>repeated .nitric.event.v1.NitricTopic topics = 1;</code>
     */
     val topics: com.google.protobuf.kotlin.DslList<io.nitric.proto.event.v1.NitricTopic, TopicsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTopicsList()
      )
    /**
     * <pre>
     * The list of found topics
     * </pre>
     *
     * <code>repeated .nitric.event.v1.NitricTopic topics = 1;</code>
     * @param value The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTopics")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.event.v1.NitricTopic, TopicsProxy>.add(value: io.nitric.proto.event.v1.NitricTopic) {
      _builder.addTopics(value)
    }
    /**
     * <pre>
     * The list of found topics
     * </pre>
     *
     * <code>repeated .nitric.event.v1.NitricTopic topics = 1;</code>
     * @param value The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTopics")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.event.v1.NitricTopic, TopicsProxy>.plusAssign(value: io.nitric.proto.event.v1.NitricTopic) {
      add(value)
    }
    /**
     * <pre>
     * The list of found topics
     * </pre>
     *
     * <code>repeated .nitric.event.v1.NitricTopic topics = 1;</code>
     * @param values The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTopics")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.event.v1.NitricTopic, TopicsProxy>.addAll(values: kotlin.collections.Iterable<io.nitric.proto.event.v1.NitricTopic>) {
      _builder.addAllTopics(values)
    }
    /**
     * <pre>
     * The list of found topics
     * </pre>
     *
     * <code>repeated .nitric.event.v1.NitricTopic topics = 1;</code>
     * @param values The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTopics")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.event.v1.NitricTopic, TopicsProxy>.plusAssign(values: kotlin.collections.Iterable<io.nitric.proto.event.v1.NitricTopic>) {
      addAll(values)
    }
    /**
     * <pre>
     * The list of found topics
     * </pre>
     *
     * <code>repeated .nitric.event.v1.NitricTopic topics = 1;</code>
     * @param index The index to set the value at.
     * @param value The topics to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTopics")
    operator fun com.google.protobuf.kotlin.DslList<io.nitric.proto.event.v1.NitricTopic, TopicsProxy>.set(index: kotlin.Int, value: io.nitric.proto.event.v1.NitricTopic) {
      _builder.setTopics(index, value)
    }
    /**
     * <pre>
     * The list of found topics
     * </pre>
     *
     * <code>repeated .nitric.event.v1.NitricTopic topics = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTopics")
    fun com.google.protobuf.kotlin.DslList<io.nitric.proto.event.v1.NitricTopic, TopicsProxy>.clear() {
      _builder.clearTopics()
    }

  }
}
@kotlin.jvm.JvmSynthetic
inline fun io.nitric.proto.event.v1.TopicListResponse.copy(block: io.nitric.proto.event.v1.TopicListResponseKt.Dsl.() -> kotlin.Unit): io.nitric.proto.event.v1.TopicListResponse =
  io.nitric.proto.event.v1.TopicListResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

